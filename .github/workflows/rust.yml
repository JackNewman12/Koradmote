name: Rust

on: 
  push:
  pull_request:
  release:
    types: [published]


env:
  CARGO_TERM_COLOR: always

jobs:
  npm_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '18'
    - run: npm install
    - run: npm run build; find ./build/ -iname *.map -delete
    - uses: actions/upload-artifact@v3
      with:
        name: js-files
        path: build

  build:
    runs-on: ${{ matrix.runs-on }}
    needs: npm_build
    strategy:
      matrix:
        os: [x86_64-unknown-linux-gnu, arm-unknown-linux-musleabihf]
        runs-on: [ubuntu-latest]
        include:
          - os: x86_64-apple-darwin
            runs-on: macos-latest # Apple needs to be compiled on an apple os
          - os: x86_64-pc-windows-msvc
            runs-on: windows-latest 
            suffix: .exe # Windows has an .exe suffix

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: js-files
        path: build
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        components: clippy
    
    - name: Install Deps
      if: contains(matrix.os, 'linux') && contains(matrix.os, 'gnu')
      run: sudo apt update && sudo apt install libudev-dev -y

    - name: Build Binary
      uses: actions-rs/cargo@v1
      with:
          use-cross: ${{ contains(matrix.os, 'arm') }}
          command: build
          args: --target ${{ matrix.os }} --release

    - uses: actions-rs/clippy-check@v1
      name: Clippy
      if: ${{ contains(matrix.os, 'x86_64-unknown-linux-gnu') }}
      with:
          name: clippy
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

    - name: Save Artifact
      uses: actions/upload-artifact@v2
      with:
        name: koradmote-${{ matrix.os }}${{ matrix.suffix }}
        path: target/${{ matrix.os }}/release/koradmote${{ matrix.suffix }}
    
    - name: Upload binary
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          asset_name: koradmote-${{ matrix.os }}${{ matrix.suffix }}
          asset_path: target/${{ matrix.os }}/release/koradmote${{ matrix.suffix }}
          upload_url: ${{ github.event.release.upload_url }}
          asset_content_type: application/octet-stream
    
